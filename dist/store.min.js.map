{"version":3,"file":"store.min.js","sources":["../src/store-path.js","../src/store.js"],"sourcesContent":["import {pick, omit, path} from 'ramda';\nimport {objList, isObject} from 'obj-list';\nimport {splitTrim} from 'split-trim';\n\nconst re = /^([A-Za-z0-9.])+(\\[.+?\\])*([A-Za-z0-9.]*)*(\\s*:(just|not)\\s*\\([A-Za-z0-9,.\\s]+\\))*(\\s*--\\s*[A-Za-z0-9]+)*$/m;\n\n/**\n * Gets data from an object determined by a path and\n * optionally filters the result.\n *\n * @param {Array} storePath  The object path to retrieve\n * @param {Array} just       The values to keep\n * @param {Array} not        The values to exclude\n * @param {Object} data      The data to retrieve the path from\n *                           otherwise this._data is used\n * @returns {Mixed}\n */\nfunction getDataFromPath({name, propName, storePath, just, not, data = {}}) {\n  const result = storePath.reduce((acc, path) => {\n    if (isObject(path)) {\n      acc = objList.get(acc, path.key, path.value);\n      return acc;\n    }\n    acc = acc ? acc[path] : null;\n    return acc;\n  }, data);\n  if (!result) {\n    return pathResults(name, propName, result);\n  }\n  if (just) {\n    return pathResults(name, propName, just.reduce((acc, value) => {\n      if (value.match(/\\./)) {\n        const parts = splitTrim(value, '.');\n        acc[parts[parts.length - 1]] = path(parts, result);\n        return acc;\n      }\n      acc[value] = pick([value], result)[value];\n      return acc;\n    }, {}));\n  } else if (not) {\n    return pathResults(name, propName, omit(not, result));\n  }\n  return pathResults(name, propName, result);\n}\n\nconst pathResults = (name, propName, result) =>\n  name && ! propName\n    ? {[name]: result}\n    : result;\n\n/**\n * Splits the filter from the path\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parseFilter(str) {\n  // a.b.c:just(d, e) -> a.b.c  (d, e)\n  let [path, just] = splitTrim(str, ':just');\n  if (!just) {\n    // a.b.c:not(d, e) -> a.b.c  (d, e)\n    let [path, not] = splitTrim(str, ':not');\n    if (not) {\n      // (d, e) -> ['d', 'e']\n      not = splitTrim(not.replace(/[()]/g, ''), ',');\n      return {path, not};\n    } else {\n      return {path};\n    }\n  } else {\n    // (d, e) -> ['d', 'e']\n    just = splitTrim(just.replace(/[()]/g, ''), ',');\n  }\n  return {path, just};\n}\n\n/**\n * Splits the store name from the path\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parsePath(str) {\n  if (!str.match(/\\./)) {\n    return {store: str, storePath: []};\n  }\n  const paths = splitTrim(str, '.');\n  const store = paths.shift().trim();\n  const storePath = paths.reduce((acc, path) => {\n    // [id: 123] -> {key: 'id', value: 123}\n    // [id: 123, name: 'aaa'] -> [{key: 'id', value: 123}, {key: 'name', value: 'aaa}]\n    if (path.match(/[[:]/)) {\n      const parts = splitTrim(path.replace(/\\[\\]/, ''), ':');\n      acc.push({key: parts[0].replace('[', '').trim(), value: parts[1].replace(']', '').trim()});\n    } else {\n      acc.push(path);\n    }\n    return acc;\n  }, []);\n  return {store, storePath};\n}\n\nfunction parse(str) {\n  str = splitTrim(str, '\\n').join('');\n  const stores = splitTrim(str, '|');\n  const numStores = stores.length;\n  if (!stores || !stores.length) {\n    throw new Error('Trying to parse a store path that is badly formed:\\n\\n' + str + '\\n');\n  }\n  const data = stores.reduce((acc, str) => {\n    acc.push(parseString(str, numStores));\n    return acc;\n  }, []);\n  return data.length === 1 ? data[0] : data;\n}\n\n/**\n * Calls the above functions in sequence and\n * bundles the results\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parseString(str, numStores) {\n  if (!re.test(str)) {\n    throw new Error('Trying to parse a store path that is badly formed:\\n\\n' + str + '\\n');\n  }\n  let propName;\n  let [paths, name] = splitTrim(str, '--');\n  let {path, just, not} = parseFilter(paths);\n  const {store, storePath} = parsePath(path);\n  if (just && just.length === 1) {\n    storePath.push(just[0]);\n    just = void 0;\n  }\n  if (storePath.length && !isObject(storePath[storePath.length - 1])) {\n    propName = storePath[storePath.length - 1];\n  }\n  if (numStores > 1 && !name) {\n    if (propName) {\n      name = propName;\n    } else if (storePath.length) {\n      throw new Error('Trying to parse a multi-store path where one of the paths needs a name such as :\\n\\n' + str + ' -- someName\\n');\n    } else {\n      name = store;\n    }\n  } else if (!name && propName) {\n    name = propName;\n  }\n  return {name, store, propName, storePath, just, not};\n}\n\nexport{getDataFromPath, parse};\n","import {BehaviorSubject} from 'rxjs';\nimport {startWith, filter, map, debounceTime} from 'rxjs/operators';\nimport {equals, clone} from 'ramda';\nimport {session} from 'json-local-session-storage';\nimport {isObject} from 'obj-list';\nimport {parse, getDataFromPath} from './store-path';\n\n/**\n * Debug mode\n */\nlet DEBUG = false;\n\n/**\n * Use local session storage to store all stores on update\n * and to load from on registration\n */\nlet USE_SESSION = false;\n\n/**\n * Container for all created store instances\n */\nconst stores = {};\n\n/**\n * Empty function for use as a no operation\n */\nconst noop = () => {};\n\n/**\n * Symbols for function names to keep class functions\n * from being overloaded\n */\nconst DATA = Symbol('data');\nconst UPDATED = Symbol('updated');\nconst NOT_UPDATED = Symbol('not-updated');\nconst UPDATE_DATA = Symbol('updateData');\nconst DEBUG_FN = Symbol('debug');\nconst SUBSCRIBE_TO_PROPERTY = Symbol('subscribeToProperty');\n\n/**\n * Class for a single store\n */\nclass _Store {\n\n  constructor(name, data, options) {\n    this.name = name;\n    this[DATA] = new WeakMap();\n    const storedData = options.session && session.getItem(name);\n    this[DATA].set(this, storedData || data);\n    this.props = [];\n    this.data$ = new BehaviorSubject(this.data);\n    this.onSubscribeCallback = options.fetchData || noop;\n    this.debugTimer = null;\n    this.useLocalSession = options.session;\n    if (!stores[name]) {\n      stores[name] = this;\n    } else {\n      throw new Error(\"Trying to create a store with a name that's already in use\");\n    }\n  }\n\n  /**\n   * Returns a copy of the store data\n   */\n  get data() {\n    return clone(this._data);\n  }\n\n  /**\n   * Shorthand method for retrieving the whole store\n   * data structure\n   */\n  get _data() {\n    return this[DATA].get(this);\n  }\n\n  /**\n   * Called whenever something subscribes to this store\n   * The default is a noop\n   * The main purpose is for lazy loading the store with data\n   * fetched from a server. By doing this once in this callback\n   * then a store only has to fetch it's initial data if and when\n   * it gets a subscription.\n   *\n   * @param {Function} callback\n   */\n  setOnSubscribeCallback(callback) {\n    this.onSubscribeCallback = callback;\n  }\n\n  /**\n   * Use local session storage for this store instance\n   */\n  useSession() {\n    this.useLocalSession = true;\n  }\n\n  /**\n   * Provides a subscription to the store state changes\n   *\n   * @param {Function} callback\n   * @param {Array} storePath\n   * @param {Array} just\n   * @param {Array} not\n   * @returns {Subscription}\n   */\n  subscribe({callback, storePath, just, not, filter}) {\n    storePath = storePath || [];\n    this.onSubscribeCallback();\n    return this[SUBSCRIBE_TO_PROPERTY](\n      data => getDataFromPath({storePath, just, not, data}),\n      callback,\n      filter\n    );\n  }\n\n  /**\n   * Subscribes to only a part of the store\n   * This filters and checks the part the subscription is interested in\n   * to prevent updates to other parts of the store but not this part\n   * being broadcast\n   *\n   * @param {Function} getProperty A function to retrieve the desired\n   *                             property of the store to subscribe to\n   * @param {Function} callback  If there are changes this function is\n   *                             called with them\n   * @returns {Subscription}\n   */\n  [SUBSCRIBE_TO_PROPERTY](getProperty, callback, propFilter) {\n    let currentProperty = getProperty(this._data);\n    return this.data$\n      .pipe(\n        startWith(this._data),\n        map(updatedData => {\n          if (this.silent) {\n            currentProperty = getProperty(updatedData);\n            return currentProperty;\n          } else {\n            return getProperty(updatedData);\n          }\n        }),\n        filter(updatedProperty =>\n          !this.silent && !equals(currentProperty, updatedProperty)),\n        map(updatedProperty => {\n          currentProperty = updatedProperty;\n          return currentProperty;\n        }),\n        filter(prop => {\n          if (propFilter) {\n            return prop[propFilter.key] !== propFilter.value;\n          }\n          return true;\n        }),\n        debounceTime(100)\n      )\n      .subscribe(callback);\n  }\n\n  /**\n   * Updates the state of the store and broadcasts it\n   * to subscribers\n   * A silent update does not broadcast the update\n   *\n   * @param {Object}  data\n   * @param {Boolean} silent\n   */\n  update(data, silent = false) {\n    if (equals(this._data, data)) {\n      this[DEBUG_FN](NOT_UPDATED, data);\n    } else {\n      let updatedData = this[UPDATE_DATA](data);\n      this[DEBUG_FN](UPDATED, data, updatedData);\n      this[DATA].set(this, updatedData);\n      updatedData = null;\n      this.silent = silent;\n      this.data$.next(this._data);\n      if (USE_SESSION || this.useLocalSession) {\n        session.setItem(this.name, this.data);\n      }\n    }\n  }\n\n  /**\n   * Shorthand method for calling update with silent\n   * set to true\n   *\n   * @param {Object} data\n   */\n  silentUpdate(data) {\n    this.update(data, true);\n  }\n\n  /**\n   * Returns an updated version of the current store data\n   * after applying the supplied updates\n   *\n   * @param {Object} data\n   */\n  [UPDATE_DATA](data) {\n    if (isObject(data)) {\n      return {...this._data, ...data};\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * A debug function for tracking store state updates\n   * in the console\n   * Call Store.debug(true) in the root of an app to\n   * set up debugging\n   */\n  [DEBUG_FN](action, data, updatedData) {\n    const dataCopy = clone(this._data);\n    clearTimeout(this.debugTimer);\n    this.debugTimer = setTimeout(() => {\n      if (DEBUG) {\n        switch (action) {\n          case UPDATED:\n            console.log.green(this.name, dataCopy, updatedData);\n            break;\n          case NOT_UPDATED:\n            console.log.yellow(`Store skipped update: ${this.name}`, dataCopy, data);\n            break;\n          default:\n            return void 0;\n        }\n      }\n    }, 1000);\n  }\n\n}\n\nconst getData = path => {\n  const data = parse(path);\n  return getDataFromPath({...data,  ...{data: Store(data.store).data}});\n};\n\n// Exports\n\nexport function Store(name) {\n  if (stores[name]) {\n    return stores[name];\n  }\n  throw new Error('Failed to access the store with the name: ' + name);\n}\n\nexport function Data(path) {\n  const data = getData(path);\n  if (data === null || data === undefined) {\n    throw new Error('Failed to access the store with the name: ' + path);\n  }\n  return data;\n}\n\nexport const registerStore = (name, defaultData, options = {}) =>\n  new _Store(name, defaultData, options);\n\nexport const setStoreDebugging = toDebugOrNotToDebug => {\n  DEBUG = toDebugOrNotToDebug;\n};\n\nexport const setStoreSession = session => {\n  USE_SESSION = session;\n};\n"],"names":["re","getDataFromPath","name","propName","storePath","just","not","data","result","reduce","acc","path","isObject","objList","get","key","value","pathResults","match","parts","splitTrim","length","pick","omit","parseFilter","str","replace","parsePath","store","paths","shift","trim","push","parse","join","stores","numStores","Error","parseString","test","DEBUG","USE_SESSION","noop","DATA","Symbol","UPDATED","NOT_UPDATED","UPDATE_DATA","DEBUG_FN","SUBSCRIBE_TO_PROPERTY","_Store","options","WeakMap","storedData","session","getItem","set","props","data$","BehaviorSubject","onSubscribeCallback","fetchData","debugTimer","useLocalSession","callback","filter","getProperty","propFilter","currentProperty","_data","pipe","startWith","map","updatedData","_this","silent","updatedProperty","equals","prop","debounceTime","subscribe","next","setItem","update","action","dataCopy","clone","clearTimeout","setTimeout","console","log","green","_this2","yellow","getData","Store","Data","undefined","registerStore","defaultData","setStoreDebugging","toDebugOrNotToDebug","setStoreSession"],"mappings":"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"}