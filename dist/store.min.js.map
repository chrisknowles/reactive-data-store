{"version":3,"file":"store.min.js","sources":["../src/store-path.js","../src/store.js"],"sourcesContent":["import {pick, omit, path, propSatisfies, find} from 'ramda';\nimport {objList, isObject} from 'obj-list';\nimport {splitTrim} from 'split-trim';\n\nconst re = /^([A-Za-z0-9.])+(\\[.+?\\])*([A-Za-z0-9.]*)*(\\s*:(just|not)\\s*\\([A-Za-z0-9_:,.\\s]+\\))*(\\s*--\\s*[A-Za-z0-9]+)*$/m;\n// const re = /^.*$/;\n\n/**\n * Gets data from an object determined by a path and\n * optionally filters the result.\n *\n * @param {Array} storePath  The object path to retrieve\n * @param {Array} just       The values to keep\n * @param {Array} not        The values to exclude\n * @param {Object} data      The data to retrieve the path from\n *                           otherwise this._data is used\n * @returns {Mixed}\n */\nfunction getDataFromPath({name, propName, storePath, just, not, data = {}}) {\n  let result = storePath.reduce((acc, path) => {\n    if (isObject(path)) {\n      acc = objList.get(acc, {[path.key]: path.value});\n      return acc;\n    }\n    acc = acc ? acc[path] : null;\n    return acc;\n  }, data);\n  if (!result) {\n    return pathResults(name, propName, result);\n  }\n  if (just) {\n    return pathResults(name, propName, just.reduce((acc, value) => {\n      if (value.match(/\\./)) {\n        const parts = splitTrim(value, '.');\n        acc[parts[parts.length - 1]] = path(parts, result);\n        return acc;\n      }\n      acc[value] = pick([value], result)[value];\n      return acc;\n    }, {}));\n  } else if (not) {\n    const props = [];\n    const keyVals = [];\n    not.map(str => {\n      if (/:/.test(str)) {\n        keyVals.push(str);\n      } else {\n        props.push(str);\n      }\n    });\n    if (props) {\n      if (Array.isArray(result)) {\n        result = result.map(item => pathResults(name, propName, omit(props, item)));\n      } else {\n        result = pathResults(name, propName, omit(props, result));\n      }\n    }\n    if (keyVals) {\n      keyVals.map(pair => {\n        pair = splitTrim(pair, ':');\n        result = result.filter(item => item[pair[0]] !== pair[1]);\n      });\n    }\n    return result;\n  }\n  return pathResults(name, propName, result);\n}\n\nconst pathResults = (name, propName, result) =>\n  name && !propName\n    ? {[name]: result}\n    : result;\n\n/**\n * Splits the filter from the path\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parseFilter(str) {\n  // a.b.c:just(d, e) -> a.b.c  (d, e)\n  let [path, just] = splitTrim(str, ':just');\n  if (!just) {\n    // a.b.c:not(d, e) -> a.b.c  (d, e)\n    let [path, not] = splitTrim(str, ':not');\n    if (not) {\n      // (d, e) -> ['d', 'e']\n      not = splitTrim(not.replace(/[()]/g, ''), ',');\n      return {path, not};\n    } else {\n      return {path};\n    }\n  } else {\n    // (d, e) -> ['d', 'e']\n    just = splitTrim(just.replace(/[()]/g, ''), ',');\n  }\n  return {path, just};\n}\n\n/**\n * Splits the store name from the path\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parsePath(str) {\n  if (!str.match(/\\./)) {\n    return {store: str, storePath: []};\n  }\n  const paths = splitTrim(str, '.');\n  const store = paths.shift().trim();\n  const storePath = paths.reduce((acc, path) => {\n    // [id: 123] -> {key: 'id', value: 123}\n    // [id: 123, name: 'aaa'] -> [{key: 'id', value: 123}, {key: 'name', value: 'aaa}]\n    if (path.match(/[[:]/)) {\n      const parts = splitTrim(path.replace(/\\[\\]/, ''), ':');\n      acc.push({key: parts[0].replace('[', '').trim(), value: parts[1].replace(']', '').trim()});\n    } else {\n      acc.push(path);\n    }\n    return acc;\n  }, []);\n  return {store, storePath};\n}\n\nfunction parse(str) {\n  str = splitTrim(str, '\\n').join('');\n  const stores = splitTrim(str, '|');\n  const numStores = stores.length;\n  if (!stores || !stores.length) {\n    throw new Error('Trying to parse a store path that is badly formed:\\n\\n' + str + '\\n');\n  }\n  const data = stores.reduce((acc, str) => {\n    acc.push(parseString(str, numStores));\n    return acc;\n  }, []);\n  return data.length === 1 ? data[0] : data;\n}\n\n/**\n * Calls the above functions in sequence and\n * bundles the results\n *\n * @param {String} str\n * @returns {Object}\n */\nfunction parseString(str, numStores) {\n  if (!re.test(str)) {\n    throw new Error('Trying to parse a store path that is badly formed:\\n\\n' + str + '\\n');\n  }\n  let propName;\n  let [paths, name] = splitTrim(str, '--');\n  let {path, just, not} = parseFilter(paths);\n  const {store, storePath} = parsePath(path);\n  if (just && just.length === 1) {\n    storePath.push(just[0]);\n    just = void 0;\n  }\n  if (storePath.length && !isObject(storePath[storePath.length - 1])) {\n    propName = storePath[storePath.length - 1];\n  }\n  if (numStores > 1 && !name) {\n    if (propName) {\n      name = propName;\n    } else if (storePath.length) {\n      throw new Error('Trying to parse a multi-store path where one of the paths needs a name such as :\\n\\n' + str + ' -- someName\\n');\n    } else {\n      name = store;\n    }\n  } else if (!name && propName) {\n    name = propName;\n  }\n  return {name, store, propName, storePath, just, not};\n}\n\nexport{getDataFromPath, parse};\n","import {BehaviorSubject} from 'rxjs';\nimport {startWith, filter, map, debounceTime} from 'rxjs/operators';\nimport {equals, clone, mergeDeepRight} from 'ramda';\nimport {session} from 'json-local-session-storage';\nimport {isObject} from 'obj-list';\nimport {parse, getDataFromPath} from './store-path';\n\n/**\n * Debug mode\n */\nlet DEBUG = false;\n\n/**\n * Use local session storage to store all stores on update\n * and to load from on registration\n */\nlet USE_SESSION = false;\n\n/**\n * Container for all created store instances\n */\nconst stores = {};\n\n/**\n * Empty function for use as a no operation\n */\nconst noop = () => {};\n\n/**\n * Symbols for function names to keep class functions\n * from being overloaded\n */\nconst DATA = Symbol('data');\nconst UPDATED = Symbol('updated');\nconst NOT_UPDATED = Symbol('not-updated');\nconst UPDATE_DATA = Symbol('updateData');\nconst DEBUG_FN = Symbol('debug');\nconst SUBSCRIBE_TO_PROPERTY = Symbol('subscribeToProperty');\n\n/**\n * Class for a single store\n */\nclass ReactiveDataStore {\n\n  constructor(name, options) {\n    this.name = name;\n    this[DATA] = new WeakMap();\n    const storedData = options.session && session.getItem(name);\n    options.data = options.data || {};\n    this[DATA].set(this, storedData || options.data);\n    this.data$ = new BehaviorSubject(this.data);\n    this.onSubscribeCallback = options.fetch\n      ? options.fetch\n      : () => options.data;\n    this.debugTimer = null;\n    this.useLocalSession = options.session;\n    if (!stores[name]) {\n      stores[name] = this;\n    } else {\n      throw new Error(\"Trying to create a store with a name that's already in use\");\n    }\n  }\n\n  /**\n   * Returns a copy of the store data\n   */\n  get data() {\n    return clone(this._data);\n  }\n\n  /**\n   * Shorthand method for retrieving the whole store\n   * data structure\n   */\n  get _data() {\n    return this[DATA].get(this);\n  }\n\n  /**\n   * Called whenever something subscribes to this store\n   * The default is a noop\n   * The main purpose is for lazy loading the store with data\n   * fetched from a server. By doing this once in this callback\n   * then a store only has to fetch it's initial data if and when\n   * it gets a subscription.\n   *\n   * @param {Function} callback\n   */\n  setOnSubscribeCallback(callback) {\n    this.onSubscribeCallback = callback;\n  }\n\n  /**\n   * Use local session storage for this store instance\n   */\n  useSession() {\n    this.useLocalSession = true;\n  }\n\n  /**\n   * Provides a subscription to the store state changes\n   *\n   * @param {Function} callback\n   * @param {Array} storePath\n   * @param {Array} just\n   * @param {Array} not\n   * @returns {Subscription}\n   */\n  subscribe({callback, storePath, just, not, filter}) {\n    storePath = storePath || [];\n    this.onSubscribeCallback();\n    return this[SUBSCRIBE_TO_PROPERTY](\n      data => getDataFromPath({storePath, just, not, data}),\n      callback,\n      filter\n    );\n  }\n\n  /**\n   * Subscribes to only a part of the store\n   * This filters and checks the part the subscription is interested in\n   * to prevent updates to other parts of the store but not this part\n   * being broadcast\n   *\n   * @param {Function} getProperty A function to retrieve the desired\n   *                             property of the store to subscribe to\n   * @param {Function} callback  If there are changes this function is\n   *                             called with them\n   * @returns {Subscription}\n   */\n  [SUBSCRIBE_TO_PROPERTY](getProperty, callback, propFilter) {\n    let currentProperty = getProperty(this._data);\n    return this.data$\n      .pipe(\n        startWith(this._data),\n        map(updatedData => {\n          if (this.silent) {\n            currentProperty = getProperty(updatedData);\n            return currentProperty;\n          } else {\n            return getProperty(updatedData);\n          }\n        }),\n        filter(updatedProperty =>\n          !this.silent && !equals(currentProperty, updatedProperty)),\n        map(updatedProperty => {\n          currentProperty = updatedProperty;\n          return currentProperty;\n        }),\n        filter(prop => {\n          if (propFilter) {\n            return prop[propFilter.key] !== propFilter.value;\n          }\n          return true;\n        }),\n        debounceTime(100)\n      )\n      .subscribe(callback);\n  }\n\n  /**\n   * Updates the state of the store and broadcasts it\n   * to subscribers\n   * A silent update does not broadcast the update\n   *\n   * @param {Object}  data\n   * @param {Boolean} silent\n   */\n  update(data, silent = false) {\n    if (equals(this._data, data)) {\n      this[DEBUG_FN](NOT_UPDATED, data);\n    } else {\n      let updatedData = this[UPDATE_DATA](data);\n      this[DEBUG_FN](UPDATED, data, updatedData);\n      this[DATA].set(this, updatedData);\n      updatedData = null;\n      this.silent = silent;\n      this.data$.next(this._data);\n      if (USE_SESSION || this.useLocalSession) {\n        session.setItem(this.name, this.data);\n      }\n    }\n  }\n\n  /**\n   * Shorthand method for calling update with silent\n   * set to true\n   *\n   * @param {Object} data\n   */\n  silentUpdate(data) {\n    this.update(data, true);\n  }\n\n  /**\n   * Returns an updated version of the current store data\n   * after applying the supplied updates\n   *\n   * @param {Object} data\n   */\n  [UPDATE_DATA](data) {\n    if (isObject(data)) {\n      return mergeDeepRight(this._data, data);\n    } else {\n      return data;\n    }\n  }\n\n  /**\n   * A debug function for tracking store state updates\n   * in the console\n   * Call Store.debug(true) in the root of an app to\n   * set up debugging\n   */\n  [DEBUG_FN](action, data, updatedData) {\n    const dataCopy = clone(this._data);\n    clearTimeout(this.debugTimer);\n    this.debugTimer = setTimeout(() => {\n      if (DEBUG) {\n        switch (action) {\n          case UPDATED:\n            console.log(`%c🍏  ${this.name}`, `color: #52BE80;line-height:1;`);\n            console.log(`   `, dataCopy);\n            console.log(`   `, updatedData);\n            break;\n          case NOT_UPDATED:\n            console.log.yellow(`Store skipped update: ${this.name}`, dataCopy, data);\n            break;\n          default:\n            return void 0;\n        }\n      }\n    }, 1000);\n  }\n\n}\n\nconst getData = pathDefinition => {\n  const path = parse(pathDefinition);\n  return getDataFromPath({...path,  ...{data: Store(path.store).data}});\n};\n\n// Exports\n\nexport function Store(name) {\n  if (stores[name]) {\n    return stores[name];\n  }\n  // const parts = name.split\n  throw new Error('Failed to access the store with the name: ' + name);\n}\n\nexport function Data(path) {\n  const data = getData(path);\n  if (data === null || data === undefined) {\n    throw new Error('Failed to access the store with the name: ' + path);\n  }\n  return data;\n}\n\nexport const registerStore = (name, options = {}) =>\n  new ReactiveDataStore(name, options);\n\nexport const requireStore = name => {\n  const subscription = Store(name).subscribe({});\n  subscription.unsubscribe();\n};\n\nexport const setStoreDebugging = toDebugOrNotToDebug => {\n  DEBUG = toDebugOrNotToDebug;\n};\n\nexport const setStoreSession = session => {\n  USE_SESSION = session;\n};\n"],"names":["re","getDataFromPath","name","propName","storePath","just","not","data","result","reduce","acc","path","isObject","objList","get","key","value","pathResults","match","parts","splitTrim","length","pick","props","keyVals","map","str","test","push","Array","isArray","item","omit","pair","filter","parseFilter","replace","parsePath","store","paths","shift","trim","parse","join","stores","numStores","Error","parseString","DEBUG","USE_SESSION","DATA","Symbol","UPDATED","NOT_UPDATED","UPDATE_DATA","DEBUG_FN","SUBSCRIBE_TO_PROPERTY","ReactiveDataStore","options","WeakMap","storedData","session","getItem","set","data$","BehaviorSubject","onSubscribeCallback","fetch","debugTimer","useLocalSession","callback","getProperty","propFilter","currentProperty","_data","pipe","startWith","updatedData","_this","silent","updatedProperty","equals","prop","debounceTime","subscribe","next","setItem","update","mergeDeepRight","action","dataCopy","clone","clearTimeout","setTimeout","console","log","_this2","yellow","getData","pathDefinition","Store","Data","undefined","registerStore","requireStore","subscription","unsubscribe","setStoreDebugging","toDebugOrNotToDebug","setStoreSession"],"mappings":"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"}